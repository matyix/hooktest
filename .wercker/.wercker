# The container definition we want to use for developing our app
box: golang:1.9
build:
  steps:
    - setup-go-workspace:
        package-dir: github.com/matyix/hooktest
    - script:
        name: install go tools
        code: |
          go version
          go get -u -v github.com/golang/dep
          go get -u -v github.com/golang/dep/cmd/dep
    - script:
        name: install dependencies
        code: |
          dep ensure
    # Statically build the project
    - script:
        name: go build
        code: CGO_ENABLED=0 go build -a -ldflags '-s' -installsuffix cgo -o hooktest .
    # Test the project
    - script:
        name: go test
        code: go test $(glide nv)
    # Copy binary to a location that gets passed along to the deploy pipeline
    - script:
        name: copy to deployment directory
        code: |
          cp -av k8sniff "$WERCKER_OUTPUT_DIR"

deploy:
  box:
    id: alpine:3.6
    cmd: /bin/sh
  docker-push:
    - internal/docker-push:
        name: push to docker hub as latest
        cmd: /pipeline/source/matyix
        username: $USERNAME
        password: $PASSWORD
        email: scheele.s@web.de
        tag: $WERCKER_GIT_COMMIT
        repository: matyix/hooktest
        registry: https://registry.hub.docker.com
